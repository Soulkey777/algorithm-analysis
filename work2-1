#include<algorithm>
#include<deque>
#include<cstring>
#include<set>
#include<stack>
#include <iostream>
#include <string>
#include<cctype>
#include<iomanip>
#include<vector>
#include<cmath>
using namespace std;
const int maxx = 10;
#define INF 1000001
int graph[maxx][maxx];
void solve(int n)
{
    int i, j, k;
    for (k = 0; k < n;k++){
        for (i = 0; i < n;i++){
            if(graph[i][k]==INF) continue;
            for (j = 0; j < n;j++){
                if(i==j)  continue;
                graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j]);
            }
        }
    }
  
}
//初始化矩阵
void init(int n,int m ){
    int u, v, vi;
    for (int i = 0; i < n;i++)
    {
        for (int j = 0; j < n;j++){
        if(i==j) graph[i][j] = 0;
        else graph[i][j] = INF;
        }
    }
   for (int i = 0; i < m;i++)
   {
       cin >> u >> v >> vi;
       graph[u][v] = vi;
       graph[v][u] = vi;
   }
}
int main(){
    int n,m;
    cin >> n >> m;
    init(n,m);
    solve(n);
      for (int i = 0; i < n;i++){
        for (int j = 0; j < n;j++){
            cout << graph[i][j] << " ";
        }
        cout << endl;
    }
    return 0;
}
