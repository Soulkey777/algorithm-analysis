
#include <iostream>
using namespace std;
 
int N=5,    //顶点个数
    M=4;    //颜色种类
int sum=0;  //可行解数量
int x[5]={-1,-1,-1,-1,-1};  //记录可行解
int a[5][5]={       //各顶点之间的连接关系
    /*0,1,1,1,0,
    1,0,1,1,1,
    1,1,0,1,0,
    1,1,1,0,1,
    0,1,0,1,0*/
    0,1,1,1,0,
    1,0,1,1,1,
    1,1,0,1,0,
    1,1,1,0,1,
    0,1,0,1,0
};
 
bool Ok(int k)  //判断是否满足条件（剪枝函数）
{
    for(int i=0;i<N;i++)
    {
        if(a[k][i]==1&&x[k]==x[i]&&x[i]!=-1)return false;
    }
    return true;
}
 
void Backtrack(int t)
{
    if(t>=N)    //到达叶子结点，记录一个可行解
    {
        sum++;
        for(int i=0;i<N;i++)
            cout<<x[i]+1<<" ";
        cout<<endl;
    }
    else
    {
        for(int i=0;i<M;i++)
        {
            x[t]=i;
            if(Ok(t))Backtrack(t+1);
            x[t]=-1;
        }
    }
}
 
 
 
int main()
{
    Backtrack(0);
    cout<<sum<<endl;
}
